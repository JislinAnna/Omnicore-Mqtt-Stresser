steps:
- id: 'GoSec Security Checks'
  name: "securego/gosec"
  args: 
  - -no-fail       #don't fail the build in this step
  - ./... 

- id: 'Sonarqube Quality Check'
  name: "us-central1-docker.pkg.dev/$PROJECT_ID/omnicore-infra-addons/sonar-scanner"
  args: 
    - "-Dsonar.host.url=https://sonarqube.cloud.korewireless.com"
    - "-Dsonar.login=a902b22d7e41d5b9ec9e983c6e17cde783053e4d"
    - "-Dsonar.projectKey=GCP-mqtt-stresser"
    - "-Dsonar.sources=."
  
- id: 'Docker Build'
  name: gcr.io/cloud-builders/docker
  args: [
    'build', 
    '-t', 
    'us-central1-docker.pkg.dev/$PROJECT_ID/omnicore-infra/mqtt-stresser:$REVISION_ID',
     '-t',
     'us-central1-docker.pkg.dev/$PROJECT_ID/omnicore-infra/mqtt-stresser:latest',
     '.'
   ]

- id: 'Trivy Vulnerability Scan'
  name: 'us-central1-docker.pkg.dev/$PROJECT_ID/omnicore-infra-addons/trivy'
  args: ['image','us-central1-docker.pkg.dev/$PROJECT_ID/omnicore-infra/mqtt-stresser:$REVISION_ID']

- id: 'Push to Google ACR'
  name: gcr.io/cloud-builders/docker
  args: [
    'push', 
    'us-central1-docker.pkg.dev/$PROJECT_ID/omnicore-infra/mqtt-stresser:$REVISION_ID'
  ]
images: [
    'us-central1-docker.pkg.dev/$PROJECT_ID/omnicore-infra/mqtt-stresser:$REVISION_ID'
  ]
